//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace peanut {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("peanut.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* Create the table structures */
        ///CREATE TABLE possibleActions (id INTEGER PRIMARY KEY, action_line VARCHAR(50) UNIQUE);
        ///CREATE TABLE history (
        ///	id INTEGER PRIMARY KEY, 
        ///	action_id INTEGER REFERENCES playerActions(id), /* Action player made on this street */
        ///	hand_id INTEGER,  /* What hand this is */
        ///	user_id INTEGER REFERENCES users(id),
        ///	position_id INTEGER REFERENCES positions(id), /* Position on the table for this hand */
        ///	table_id INTEGER REFERENCES tableNames(id),
        ///	street_id INTEGER REFERENCE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string createTables {
            get {
                return ResourceManager.GetString("createTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT MAX(hand_id) AS HANDID FROM history.
        /// </summary>
        internal static string getHandId {
            get {
                return ResourceManager.GetString("getHandId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///CAST(
        ///(
        ///	SELECT COUNT(*) FROM history 
        ///	INNER JOIN users ON(users.id = history.user_id)
        ///	INNER JOIN possibleActions ON (possibleActions.id = history.action_id)
        ///	INNER JOIN streets ON(streets.id = history.street_id)
        ///	WHERE (possibleActions.action_line LIKE &apos;%R%&apos;)
        ///	AND users.username = @username AND streets.name = &apos;preflop&apos;
        ///	|ANDWHERE_POSITION|
        ///	
        ///) AS float)/ CAST(
        ///(
        ///	SELECT COUNT(*) FROM history 
        ///	INNER JOIN users ON(users.id = history.user_id)
        ///	INNER JOIN streets ON(streets.id = histor [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string getPFR {
            get {
                return ResourceManager.GetString("getPFR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT id FROM users WHERE username = @username LIMIT 1;.
        /// </summary>
        internal static string getUserId {
            get {
                return ResourceManager.GetString("getUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///CAST(
        ///(
        ///	SELECT COUNT(*) FROM history 
        ///	INNER JOIN users ON(users.id = history.user_id)
        ///	INNER JOIN possibleActions ON (possibleActions.id = history.action_id)
        ///	INNER JOIN streets ON(streets.id = history.street_id)
        ///	WHERE (possibleActions.action_line LIKE &apos;%C%&apos; OR possibleActions.action_line LIKE &apos;%R%&apos;)
        ///	AND users.username = @username AND streets.name = &apos;preflop&apos;
        ///	|ANDWHERE_POSITION|
        ///	
        ///) AS float)/ CAST(
        ///(
        ///	SELECT COUNT(*) FROM history 
        ///	INNER JOIN users ON(users.id = history.user_id)
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string getVPIP {
            get {
                return ResourceManager.GetString("getVPIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO history (action_id, hand_id, user_id, position_id, table_id, street_id, final_pot_size)
        ///VALUES(
        ///	(SELECT id FROM possibleActions WHERE action_line = @actionLine),
        ///	@handId,
        ///	(SELECT id FROM users WHERE username = @username),
        ///	(SELECT id FROM positions WHERE positionName = @position),
        ///	(SELECT id FROM tableNames WHERE name = @tableName),
        ///	(SELECT id FROM streets WHERE name = @streetName),
        ///	@finalPotSize
        ///);.
        /// </summary>
        internal static string insertActions {
            get {
                return ResourceManager.GetString("insertActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO users (username) VALUES(@username);.
        /// </summary>
        internal static string insertPlayer {
            get {
                return ResourceManager.GetString("insertPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO tableNames (name) VALUES (@tableName);.
        /// </summary>
        internal static string insertTable {
            get {
                return ResourceManager.GetString("insertTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT count(*) FROM sqlite_master WHERE type=&apos;table&apos; AND name=@tableName;.
        /// </summary>
        internal static string tableExists {
            get {
                return ResourceManager.GetString("tableExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM @tableName.
        /// </summary>
        internal static string truncateTable {
            get {
                return ResourceManager.GetString("truncateTable", resourceCulture);
            }
        }
    }
}
